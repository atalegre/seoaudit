
import { extractDomainFromUrl } from '../domainUtils';

/**
 * Fetches the site logo URL using the Clearbit Logo API
 * Servi√ßo gratuito que n√£o requer autentica√ß√£o para uso b√°sico
 */
export async function fetchSiteLogo(url: string): Promise<string | null> {
  try {
    // Log para depura√ß√£o - ver a URL recebida
    console.log('üîç Tentando obter logo para URL:', url);
    
    const domain = extractDomainFromUrl(url);
    if (!domain) {
      console.warn('‚ö†Ô∏è N√£o foi poss√≠vel extrair dom√≠nio da URL:', url);
      return null;
    }
    
    console.log('üåê Dom√≠nio extra√≠do:', domain);
    
    // Construir URL do logo manualmente para garantir formato correto
    const logoUrl = `https://logo.clearbit.com/${domain}`;
    console.log(`üñºÔ∏è Logo URL constru√≠da: ${logoUrl}`);
    
    // Verificar se a URL do logo est√° acess√≠vel
    try {
      // Testar a URL do logo com uma solicita√ß√£o HEAD para verificar se ela existe
      const response = await fetch(logoUrl, { method: 'HEAD', mode: 'no-cors' });
      console.log(`‚úÖ Logo verificado, status: HEAD request enviada`);
      return logoUrl;
    } catch (logoError) {
      // Mesmo se a verifica√ß√£o falhar, ainda retornamos a URL
      // Isso √© porque o componente de imagem pode lidar com fallbacks
      console.warn(`‚ö†Ô∏è Aviso na verifica√ß√£o do logo:`, logoError);
      return logoUrl; // Retornar mesmo assim, deixar o componente de imagem lidar com fallbacks
    }
  } catch (error) {
    console.error('‚ùå Erro ao buscar logo do site:', error);
    return null;
  }
}
